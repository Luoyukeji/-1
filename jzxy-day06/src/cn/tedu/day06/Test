1、this：代表本类对象的一个引用对象，
        用来区分成员变量和局部变量，只能用在方法体中

        this.成员变量   -- - 访问成员变量
        this.方法名()  --调用方法
        this()  --调用构造方法

 //this 可以进行构造方法之间的调用
        //但是调用是单向的，不是双向的，双向来回调会陷入死循环
        //规定this关键字必须放在构造方法的第一行


        方法重载；
        在同一个类中，方法名相同，参数列表不同()
        编译器在编译时会根据方法点的签名自动绑定调用的方法

        参数列表指的是参数类型的顺序和个数，而不是参数名
        重载和返回值无关

        构造方法属于重载


        继承：面向对象的一个特性，从已有的类中派生出来的新的类，新的类能吸收已有类的属性和行为，并扩展新的内容
        父类（超类）
        子类（派生类）
        特点：代码复用，使用关键字extend


        super.成员变量：访问的是超类的成员变量
        super.方法名() ,调用父类方法

   构造方法不可以被继承，语法不符合要求，构造方法要求与类名相同



   5、方法重写(Override)
   发生在父子类中，方法名相同，参数列表相同，方法体不同
   修饰符： 子类权限 >=  父类权限



   6、this和super的小结
        this.代表本类对象的引用
        this.name  =  name;//前面的是成员变量   ，后面的是局部变量


        super代表父类对象的引用

        super发生在继承关系之后，子类如果想调用父类的功能，可以通过super来调用

        super调用子类的构造方法必须出现在子类构造方法的第一行，
        如果父类没有提供无参构造方法，子类可以通过super来调用父类中的其他含参构造方法，super()，
        在子类的构造方法中，默认存在的

  7、方法重写和重载小结
  7.1：方法重载：
                在同一个类中，方法名相同，参数列表不同()，可以是参数的个数，数据类型，顺序不同
                编译器在编译时会根据方法点的签名自动绑定调用的方法
                参数列表指的是参数类型的顺序和个数，而不是参数名
                重载和返回值无关
                构造方法属于重载

       重载的意义：为了方便外界对方法进行调用


 7.2：方法重写：
                发生在父子类中，方法名相同，参数列表相同，返回值相同，只有方法体不同

                重写的意义：在不修改父类的源码的前提下，进行功能的修改和扩展
                 修饰符： 子类权限 >=  父类权限

8.变量
   1.局部变量
   位置：方法里或局部代码块
   注意：再使用的时候必须手动初始化来分配内存
   作用域：方法里或局部代码块